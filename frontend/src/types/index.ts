// frontend/src/types/index.ts

export type CaseType = 'Civil Dispute' | 'Criminal Defense' | 'Family Law' | 'Intellectual Property' | 'Corporate Law' | 'Other';
export type CaseStatus = 'Open' | 'Closed' | 'Pending' | 'Archived';

export interface Case {
  id: number;
  caseNumber: string;
  title: string;
  description?: string;
  type: CaseType;
  status: CaseStatus;
  userId: number;
  createdAt: string;
  updatedAt: string;
}

export interface TimelineEvent {
  date: string;
  event: string;
}

export interface CaseTimelineEvent {
  id: number | string; // Can be number for user events or string for document events
  eventDate: string;
  eventDescription: string;
  sourceType: 'document' | 'user';
  sourceId: number | null;
  sourceName: string; // Document filename or user full name
  createdAt: string;
  updatedAt: string;
}

export interface CreateTimelineEventRequest {
  eventDate: string;
  eventDescription: string;
}

export interface UpdateTimelineEventRequest {
  eventDate: string;
  eventDescription: string;
}

export interface Document {
  id: number;
  caseId: number;
  fileName: string;
  storagePath: string;
  fileType: string;
  fileSize: number;
  createdAt: string;
  processingStatus: 'PENDING' | 'PROCESSING' | 'PROCESSED' | 'FAILED';
  
  // Add the new AI fields (make them optional)
  summary?: string;
  timeline?: TimelineEvent[];
  translationEn?: string;
  translationAr?: string;
}

export interface Message {
  id?: number; // Optional as it's generated by the DB
  caseId?: number;
  sender: 'user' | 'bot';
  text: string;
  createdAt?: string;
}
